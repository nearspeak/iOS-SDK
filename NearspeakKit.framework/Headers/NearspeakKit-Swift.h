// Generated by Swift version 1.1 (swift-600.0.56.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import ObjectiveC;
@import CoreLocation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSDate (SWIFT_EXTENSION(NearspeakKit))
@end

@class NSKTag;

SWIFT_CLASS("_TtC12NearspeakKit6NSKApi")
@interface NSKApi : NSObject
@property (nonatomic, copy) NSString * auth_token;
- (instancetype)initWithDevMode:(BOOL)devMode OBJC_DESIGNATED_INITIALIZER;
- (void)logout;
- (void)saveCredentials;
- (void)loadCredentials;
- (BOOL)isLoggedIn;
- (void)getAuthTokenWithUsername:(NSString *)username password:(NSString *)password requestCompleted:(void (^)(BOOL, NSString *))requestCompleted;
- (void)getMyTags:(void (^)(BOOL, NSArray *))requestCompleted;
- (void)getTagByIdWithTagIdentifier:(NSString *)tagIdentifier requestCompleted:(void (^)(BOOL, NSKTag *))requestCompleted;
- (void)getTagByHardwareIdWithHardwareIdentifier:(NSString *)hardwareIdentifier beaconMajorId:(NSString *)beaconMajorId beaconMinorId:(NSString *)beaconMinorId requestCompleted:(void (^)(BOOL, NSKTag *))requestCompleted;
@end

@class CLBeacon;
@class CLLocationManager;
@class CLRegion;
@class CLBeaconRegion;

SWIFT_CLASS("_TtC12NearspeakKit16NSKBeaconManager")
@interface NSKBeaconManager : NSObject <CLLocationManagerDelegate>
@property (nonatomic, copy) NSArray * currentBeacons;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)startMonitoringForNearspeakBeacons;
- (void)stopMonitoringForNearspeakBeacons;
- (void)locationManager:(CLLocationManager *)manager didStartMonitoringForRegion:(CLRegion *)region;
- (void)locationManager:(CLLocationManager *)manager didDetermineState:(CLRegionState)state forRegion:(CLRegion *)region;
- (void)locationManager:(CLLocationManager *)manager didEnterRegion:(CLRegion *)region;
- (void)locationManager:(CLLocationManager *)manager didExitRegion:(CLRegion *)region;
- (void)locationManager:(CLLocationManager *)manager didRangeBeacons:(NSArray *)beacons inRegion:(CLBeaconRegion *)region;
@end

@class NSNumber;
@class NSURL;

SWIFT_CLASS("_TtC12NearspeakKit6NSKTag")
@interface NSKTag : NSObject
@property (nonatomic) NSNumber * id;
@property (nonatomic, copy) NSString * tagDescription;
@property (nonatomic) NSNumber * tagCategoryId;
@property (nonatomic, copy) NSString * translation;
@property (nonatomic, copy) NSString * tagIdentifier;
@property (nonatomic) NSURL * imageURL;
@property (nonatomic, copy) NSString * buttonText;
@property (nonatomic) NSNumber * parentId;
@property (nonatomic, copy) NSString * parentName;
@property (nonatomic, copy) NSString * parentIdentifier;
@property (nonatomic) NSURL * textURL;
@property (nonatomic, copy) NSString * gender;
@property (nonatomic, copy) NSString * name;
@property (nonatomic) CLBeacon * hardwareBeacon;
- (instancetype)initWithId:(NSNumber *)id OBJC_DESIGNATED_INITIALIZER;

/// Parse a ancestry json string into a array of strings.
/// Input looks like: 123/118/20
///
/// \param jsoninput The ancestry json input.
///
/// \returns An array of ancestries.
+ (NSArray *)parseAncestry:(NSString *)jsoninput;
@end


@interface NSNumber (SWIFT_EXTENSION(NearspeakKit))
@end

#pragma clang diagnostic pop
